# 1. Реализуйте метод, принимающий в качестве аргументов два целочисленных массива, 
# и возвращающий новый массив, каждый элемент которого равен разности элементов двух 
# входящих массивов в той же ячейке. Если длины массивов не равны, необходимо как-то 
# оповестить пользователя.

def diff_arrays(arr1, arr2):
    if len(arr1) != len(arr2):
        print("Длины массивов не равны!")
        return None
    return [arr1[i] - arr2[i] for i in range(len(arr1))]

arr1 = [1, 2, 3, 4, 5]
arr2 = [5, 4, 3, 2, 1, 6]

result = diff_arrays(arr1, arr2)
if result is not None:
    print(result)


# 2. Реализуйте метод, принимающий в качестве аргументов два целочисленных массива, 
# и возвращающий новый массив, каждый элемент которого равен частному элементов двух 
# входящих массивов в той же ячейке. Если длины массивов не равны, необходимо как-то 
# оповестить пользователя. Важно: При выполнении метода единственное исключение, которое 
# пользователь может увидеть - RuntimeException, т.е. ваше.

def div_arrays(arr1, arr2):
    if len(arr1) != len(arr2):
        raise RuntimeError("Длины массивов не равны!")
    return [arr1[i] / arr2[i] for i in range(len(arr1))]

arr1 = [1, 2, 3, 4, 5, 6]
arr2 = [5, 4, 3, 2, 1]

try:
    result = div_arrays(arr1, arr2)
    print(result)
except RuntimeError as e:
    print(e)